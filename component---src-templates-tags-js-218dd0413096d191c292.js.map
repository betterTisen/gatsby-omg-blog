{"version":3,"sources":["webpack:///./content/assets/top_image/2020-01-20.jpg","webpack:///./src/templates/tags.js","webpack:///./src/components/Pagination.js","webpack:///./content/assets/top_image sync ^\\.\\/.*$"],"names":["module","exports","BlogTagsTemplate","render","this","props","data","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","newPosts","forEach","node","frontmatter","top","unshift","push","location","mainHeadTitle","tag","className","map","fields","slug","topImg","to","key","src","require","alt","dangerouslySetInnerHTML","__html","description","excerpt","tags","date","path","React","Component","pageQuery","Pagination","totalPage","currentPage","hrefPath","Array","from","length","_","i","current","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve"],"mappings":"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","file":"component---src-templates-tags-js-218dd0413096d191c292.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/2020-01-20-d4d756d1523ae09ff75c3221440fee8e.jpg\";","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport Pagination from \"../components/Pagination\"\n\n// 同main页面的区别\n// 查询语句\n// SEO title={`${pageContext.tag}`}\n// 分页器 path={`/tags/${pageContext.tag}/`}\n\nclass BlogTagsTemplate extends React.Component {\n  render() {\n    const { data, pageContext } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    let newPosts = [] //置顶排序\n    posts.forEach(({ node }) => {\n      if (node.frontmatter.top) {\n        newPosts.unshift(node)\n      } else {\n        newPosts.push(node)\n      }\n    })\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} mainHeadTitle=\"\">\n        <SEO title={`${pageContext.tag}`} />\n        <div className=\"Main-list-class\">\n          {newPosts.map(node => {\n            const title = node.frontmatter.title || node.fields.slug\n\n            return (\n              <Link\n                className={`main-img-left-layout fade-in-ani${\n                  node.frontmatter.topImg ? \" main-have-img\" : \" main-no-img\"\n                }`}\n                to={node.fields.slug}\n                key={node.fields.slug}\n              >\n                {node.frontmatter.topImg ? (\n                  <div className=\"left-img\">\n                    <img\n                      src={require(`../../content/assets/top_image/${node.frontmatter.topImg}`)}\n                      alt=\"\"\n                    />\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <header>\n                  {title}\n                  {node.frontmatter.top && (\n                    <div className=\"top-badge\">置顶</div>\n                  )}\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n                <div className=\"main-nav\">\n                  <span>\n                    {node.frontmatter.tags.map(tag => {\n                      return <i key={tag}>{tag}</i>\n                    })}\n                  </span>\n                  <small>{node.frontmatter.date}</small>\n                </div>\n              </Link>\n            )\n          })}\n          <Pagination\n            path={`/tags/${pageContext.tag}/`}\n            pageContext={pageContext}\n          />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogTagsTemplate\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n            topImg\n            top\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Pagination extends Component {\n  render() {\n    const skipNum = 2 //用于配置分页器 Current 的长度\n\n    const { totalPage, currentPage } = this.props.pageContext\n\n    const hrefPath = this.props.path\n\n    return (\n      <div className={\"Pagination-class\"}>\n        <ul>\n          {currentPage - skipNum - 1 >= 1 && (\n            <li>\n              <Link to={`${hrefPath}`}>1</Link>\n            </li>\n          )}\n          {currentPage - skipNum - 1 > 1 && (\n            <li>\n              <span>...</span>\n            </li>\n          )}\n\n          {Array.from({ length: skipNum }).map((_, i) => {\n            const current = currentPage - skipNum + i\n            return (\n              current >= 1 && (\n                <li key={`${hrefPath}${current}`}>\n                  <Link to={current === 1 ? `${hrefPath}` : `${hrefPath}${current}`}>\n                    {current}\n                  </Link>\n                </li>\n              )\n            )\n          })}\n\n          <li className=\"center\"> {currentPage} </li>\n\n          {Array.from({ length: skipNum }).map((_, i) => {\n            const current = currentPage + i + 1\n            return (\n              current <= totalPage && (\n                <li key={`${hrefPath}${current}`}>\n                  <Link to={`${hrefPath}${current}`}>{current}</Link>\n                </li>\n              )\n            )\n          })}\n\n          {currentPage + skipNum + 1 < totalPage && (\n            <li>\n              <span>...</span>\n            </li>\n          )}\n          {currentPage + skipNum + 1 <= totalPage && (\n            <li>\n              <Link to={`${hrefPath}${totalPage}`}>{totalPage}</Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Pagination\n","var map = {\n\t\"./1.png\": \"txKD\",\n\t\"./2.png\": \"kR/k\",\n\t\"./2020-01-20.jpg\": \"8fK1\",\n\t\"./3.png\": \"mY32\",\n\t\"./4.png\": \"dta2\",\n\t\"./5.png\": \"VDrO\",\n\t\"./6.png\": \"h2bC\",\n\t\"./7.png\": \"xO7t\",\n\t\"./8.png\": \"XTZa\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"nk+4\";"],"sourceRoot":""}