{"version":3,"sources":["webpack:///./src/components/Loading.js","webpack:///./src/templates/options/github.js"],"names":["Loading","render","id","className","Component","BlogGithubTemplate","props","state","repos","siteTitle","this","data","site","siteMetadata","title","Layout","location","mainHeadData","details","SEO","length","map","e","key","href","clone_url","name","description","stargazers_count","forks_count","language","componentDidMount","username","side","github","fetch","method","then","r","json","res","setState","React","pageQuery"],"mappings":"yOAgBeA,E,gLAbbC,OAAA,WACE,OACE,yBAAKC,GAAG,cAAcC,UAAU,QAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,e,GAPHC,a,mYCKhBC,E,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,MAAO,IAFL,E,kHAKnBP,OAAA,WACE,IAAMQ,EAAYC,KAAKJ,MAAMK,KAAKC,KAAKC,aAAaC,MAOpD,OACE,kBAACC,EAAA,EAAD,CACEC,SAAUN,KAAKJ,MAAMU,SACrBF,MAAOL,EACPQ,aATiB,CACnBH,MAAO,OACPI,QAAS,wBASP,kBAACC,EAAA,EAAD,CAAKL,MAAK,cACV,yBAAKX,UAAU,yCACb,yBAAKA,UAAU,oBACgB,IAA5BO,KAAKH,MAAMC,MAAMY,OAChB,kBAAC,EAAD,MAEAV,KAAKH,MAAMC,MAAMa,KAAI,SAAAC,GACnB,OACE,uBACEnB,UAAU,yBACVoB,IAAKD,EAAEpB,GACPsB,KAAMF,EAAEG,WAER,gCACGH,EAAEI,KACH,yBAAKvB,UAAU,aAAf,SAEF,2BAAImB,EAAEK,aACN,yBAAKxB,UAAU,aACb,8BACE,2BAAImB,EAAEM,iBAAN,UADF,KAEE,2BAAIN,EAAEO,YAAN,WAEF,+BAAQP,EAAEQ,mB,EAY9BC,kBAAA,WAAqB,IAAD,OACVC,EAAatB,KAAKJ,MAAMK,KAAKC,KAAKC,aAAaoB,KAAKC,OAApDF,SAERG,MAAM,gCAAgCH,EAAjC,SAAmD,CACtDI,OAAQ,QAEPC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZjC,MAAM,EAAKgC,S,GAhEYE,IAAMtC,WAwE1BuC,GAFEtC,YAEO","file":"component---src-templates-options-github-js-c42a16a243ebf0fb921a.js","sourcesContent":["import React, { Component } from \"react\"\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div id=\"dataloading\" className=\"flip\">\n        <div className=\"spinner\">\n          <div className=\"bounce1\"></div>\n          <div className=\"bounce2\"></div>\n          <div className=\"bounce3\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loading\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../../components/Layout\"\nimport SEO from \"../../components/SEO\"\nimport Loading from \"../../components/Loading\"\n\nclass BlogGithubTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { repos: [] }\n  }\n\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    const mainHeadData = {\n      title: \"项目展示\",\n      details: \"代码的价值在于产品，产品的价值在于用户\",\n    }\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={siteTitle}\n        mainHeadData={mainHeadData}\n      >\n        <SEO title={`My Github`} />\n        <div className=\"Option-class Github-class fade-in-ani\">\n          <div className=\"Option-container\">\n            {this.state.repos.length === 0 ? (\n              <Loading />\n            ) : (\n              this.state.repos.map(e => {\n                return (\n                  <a\n                    className=\"Repos-item fade-in-ani\"\n                    key={e.id}\n                    href={e.clone_url}\n                  >\n                    <header>\n                      {e.name}\n                      <div className=\"top-badge\">点击查看</div>\n                    </header>\n                    <p>{e.description}</p>\n                    <div className=\"repos-nav\">\n                      <span>\n                        <i>{e.stargazers_count} stars</i> /\n                        <i>{e.forks_count} forks</i>\n                      </span>\n                      <small>{e.language}</small>\n                    </div>\n                  </a>\n                )\n              })\n            )}\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\n  componentDidMount() {\n    const { username } = this.props.data.site.siteMetadata.side.github\n\n    fetch(`https://api.github.com/users/${username}/repos`, {\n      method: \"GET\",\n    })\n      .then(r => r.json())\n      .then(res => {\n        this.setState({\n          repos: [...res],\n        })\n      })\n  }\n}\n\nexport default BlogGithubTemplate\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        side {\n          github {\n            username\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}